{
  "env": {
    "browser": true,
    "es2021": true
  },
  "extends": [
    "plugin:react-hooks/recommended",
    "plugin:@typescript-eslint/recommended",
    "next/core-web-vitals",
    "plugin:prettier/recommended",
    "plugin:tailwindcss/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "project": "./tsconfig.json"
  },
  "ignorePatterns": ["build", ".eslintrc.json"],
  "plugins": ["simple-import-sort", "import", "react", "@typescript-eslint"],
  "rules": {
    "no-console": "warn",
    "prettier/prettier": ["error", {}, { "usePrettierrc": true }],
    "simple-import-sort/imports": [
      "warn",
      {
        "groups": [
          ["^@?\\w", "^react\\w", "^next@?\\w"],
          // Node.js builtins and third-party packages
          ["^\\u0000"],
          // Your internal path aliases
          ["^@/public(\\/.*|$)"],
          ["^@/(components|hooks|styles|lib|utils)(\\/.*|$)"],

          ["^\\.\\.(?!/?$)", "^\\.\\./?$"],
          // Other relative imports. Put same-folder imports and `.` last.
          ["^\\./(?=.*/)(?!/?$)", "^\\.(?!/?$)", "^\\./?$"],
          // Style imports (CSS, SCSS)
          ["^.+\\.s?(css)$"]

          // Packages. `react` related packages come first.
          // ["^@?\\w", "^react"],
          // // Internal packages.
          // ["^(@|@company|@ui|@components|@utils|@styles|@lib|@/\\public)(/.*|$)"],
          // // Side effect imports.
          // ["^\\u0000"],
          // // Parent imports. Put `..` last.
          // ["^\\.\\.(?!/?$)", "^\\.\\./?$"],
          // // Other relative imports. Put same-folder imports and `.` last.
          // ["^\\./(?=.*/)(?!/?$)", "^\\.(?!/?$)", "^\\./?$"],
          // // Style imports.
          // ["^.+\\.s?css$"]
        ]
      }
    ],
    "import/first": "error",
    "import/newline-after-import": "error",
    "import/no-duplicates": "error",
    "react-hooks/exhaustive-deps": "off",
    "@typescript-eslint/consistent-type-imports": "warn",
    "@typescript-eslint/no-unused-vars": "warn",
    "tailwindcss/no-custom-classname": [
      "off"
      // { "whitelist": ["link\\-(single|double|multi)", "auto\\-grid"] }
    ]
  },
  "overrides": [
    {
      "files": ["*.ts", "*.tsx", "*.js"],
      "parser": "@typescript-eslint/parser"
    }
  ],
  "settings": {
    "import/resolver": {
      "typescript": {
        "project": "./tsconfig.json"
      }
    }
  }
}
